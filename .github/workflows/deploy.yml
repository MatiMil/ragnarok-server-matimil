name: Deploy Ragnarok Server

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Substitute secrets locally
        env:
          FLUXCP_INSTALLER_PASSWORD: ${{ secrets.FLUXCP_INSTALLER_PASSWORD }}
          FLUXCP_TINY_MCE_KEY: ${{ secrets.FLUXCP_TINY_MCE_KEY }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_VOLUME: ${{ secrets.DATABASE_VOLUME }}
          DATABASE_ROOT_PASSWORD: ${{ secrets.DATABASE_ROOT_PASSWORD }}
          RATHENA_LOGIN_SERVER_PORT: ${{ secrets.RATHENA_LOGIN_SERVER_PORT }}
          RATHENA_CHAR_SERVER_PORT: ${{ secrets.RATHENA_CHAR_SERVER_PORT }}
          RATHENA_MAP_SERVER_PORT: ${{ secrets.RATHENA_MAP_SERVER_PORT }}
          RATHENA_COMMUNICATION_USER: ${{ secrets.RATHENA_COMMUNICATION_USER }}
          RATHENA_COMMUNICATION_PASSWORD: ${{ secrets.RATHENA_COMMUNICATION_PASSWORD }}
        run: |
          echo "Substituting secrets in fluxcp/, rathena/, mysql/ (excluding mysql/save)..."

          for var in FLUXCP_INSTALLER_PASSWORD FLUXCP_TINY_MCE_KEY DATABASE_PORT DATABASE_USER DATABASE_PASSWORD DATABASE_NAME DATABASE_VOLUME DATABASE_ROOT_PASSWORD RATHENA_LOGIN_SERVER_PORT RATHENA_CHAR_SERVER_PORT RATHENA_MAP_SERVER_PORT RATHENA_COMMUNICATION_USER RATHENA_COMMUNICATION_PASSWORD; do
            value=$(printenv $var)

            # skip empty secrets
            if [ -n "$value" ]; then
              echo "Replacing {{$var}}"
              find fluxcp rathena mysql \
                -path "mysql/save" -prune -o \
                -type f -print0 | xargs -0 sed -i "s|{{$var}}|$value|g"

              sed -i "s|{{$var}}|$value|g" docker-compose.yml
            fi
          done

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SERVER_SSH_PORT }} ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Copy files to server
        run: |
          rsync -avz \
            --exclude='.git/' \
            --exclude='.github/' \
            --exclude='.gitignore' \
            --exclude='.devcontainer' \
            -e "ssh -p ${{ secrets.SERVER_SSH_PORT }}" ./ \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/${{ secrets.SERVER_USER }}/ragnarok-server


      - name: Restart containers on server
        run: |
          ssh -p ${{ secrets.SERVER_SSH_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << EOF
            cd /home/${SERVER_USER}/ragnarok-server

            echo "Docker login"
            echo "${DOCKERHUB_TOKEN}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin

            echo "Pull latest images"
            docker compose pull

            echo "Restart containers"
            docker compose down
            docker compose up -d
          EOF
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
