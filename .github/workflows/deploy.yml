name: Deploy Ragnarok Server

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Copy repo to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          source: "."
          target: "~/ragnarok-server"

      - name: Substitute secrets, login Docker, restart containers
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            set -euo pipefail
            cd ~/ragnarok-server

            echo "Starting substitution in fluxcp/, rathena/, mysql/ (excluding mysql/save, only files containing '{{')..."

            for dir in fluxcp rathena mysql; do
              if [ -d "$dir" ]; then
                find "$dir" -type f -not -path "mysql/save/*" -print0 | while IFS= read -r -d '' file; do
                  if grep -Iq '{{' "$file"; then
                    echo "Substituting in $file"
                    sed -i \
                      -e "s|{{FLUXCP_INSTALLER_PASSWORD}}|${{ secrets.FLUXCP_INSTALLER_PASSWORD }}|g" \
                      -e "s|{{FLUXCP_TINY_MCE_KEY}}|${{ secrets.FLUXCP_TINY_MCE_KEY }}|g" \
                      -e "s|{{DATABASE_PORT}}|${{ secrets.DATABASE_PORT }}|g" \
                      -e "s|{{DATABASE_USER}}|${{ secrets.DATABASE_USER }}|g" \
                      -e "s|{{DATABASE_PASSWORD}}|${{ secrets.DATABASE_PASSWORD }}|g" \
                      -e "s|{{DATABASE_NAME}}|${{ secrets.DATABASE_NAME }}|g" \
                      -e "s|{{DATABASE_VOLUME}}|${{ secrets.DATABASE_VOLUME }}|g" \
                      -e "s|{{DATABASE_ROOT_PASSWORD}}|${{ secrets.DATABASE_ROOT_PASSWORD }}|g" \
                      -e "s|{{RATHENA_LOGIN_SERVER_PORT}}|${{ secrets.RATHENA_LOGIN_SERVER_PORT }}|g" \
                      -e "s|{{RATHENA_CHAR_SERVER_PORT}}|${{ secrets.RATHENA_CHAR_SERVER_PORT }}|g" \
                      -e "s|{{RATHENA_MAP_SERVER_PORT}}|${{ secrets.RATHENA_MAP_SERVER_PORT }}|g" \
                      -e "s|{{RATHENA_COMMUNICATION_USER}}|${{ secrets.RATHENA_COMMUNICATION_USER }}|g" \
                      -e "s|{{RATHENA_COMMUNICATION_PASSWORD}}|${{ secrets.RATHENA_COMMUNICATION_PASSWORD }}|g" \
                      "$file"
                  fi
                done
              fi
            done

            if [ -f docker-compose.yml ]; then
              echo "Substituting in docker-compose.yml"
              sed -i \
                -e "s|{{FLUXCP_INSTALLER_PASSWORD}}|${{ secrets.FLUXCP_INSTALLER_PASSWORD }}|g" \
                -e "s|{{FLUXCP_TINY_MCE_KEY}}|${{ secrets.FLUXCP_TINY_MCE_KEY }}|g" \
                -e "s|{{DATABASE_PORT}}|${{ secrets.DATABASE_PORT }}|g" \
                -e "s|{{DATABASE_USER}}|${{ secrets.DATABASE_USER }}|g" \
                -e "s|{{DATABASE_PASSWORD}}|${{ secrets.DATABASE_PASSWORD }}|g" \
                -e "s|{{DATABASE_NAME}}|${{ secrets.DATABASE_NAME }}|g" \
                -e "s|{{DATABASE_VOLUME}}|${{ secrets.DATABASE_VOLUME }}|g" \
                -e "s|{{DATABASE_ROOT_PASSWORD}}|${{ secrets.DATABASE_ROOT_PASSWORD }}|g" \
                -e "s|{{RATHENA_LOGIN_SERVER_PORT}}|${{ secrets.RATHENA_LOGIN_SERVER_PORT }}|g" \
                -e "s|{{RATHENA_CHAR_SERVER_PORT}}|${{ secrets.RATHENA_CHAR_SERVER_PORT }}|g" \
                -e "s|{{RATHENA_MAP_SERVER_PORT}}|${{ secrets.RATHENA_MAP_SERVER_PORT }}|g" \
                -e "s|{{RATHENA_COMMUNICATION_USER}}|${{ secrets.RATHENA_COMMUNICATION_USER }}|g" \
                -e "s|{{RATHENA_COMMUNICATION_PASSWORD}}|${{ secrets.RATHENA_COMMUNICATION_PASSWORD }}|g" \
                docker-compose.yml
            fi

            echo "Logging in to Docker Hub..."
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login --username "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

            echo "Pulling images and restarting containers..."
            docker compose pull
            docker compose down
            docker compose up -d

            echo "Deploy finished."